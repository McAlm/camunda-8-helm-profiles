# ------------------------------------
# Set the following for your specific environment
# Already have a Cluster? Set these values to point to your existing environment
# Otherwise, these values will be used to create a new Cluster

region ?= us-east-1
zones ?= ['us-east-1a', 'us-east-1b']
clusterName ?= YOUR_CLUSTER_NAME
clusterVersion ?= 1.25

machineType ?= c6i.4xlarge
# TODO: Currently, auto scaling configuration using these scripts for AWS is not working
# desiredSize is used as the starting size of the cluster
desiredSize ?= 3
minSize ?= 1
maxSize ?= 6

# ------------------------------------
# The following variables should not be changed except for advanced use cases
ifeq ($(OS),Windows_NT)
    root ?= $(CURDIR)/..
else
    root ?= $(shell pwd)/..
endif

# Camunda components will be installed into the following Kubernetes namespace
namespace ?= camunda
# Helm release name
release ?= camunda
# Helm chart coordinates for Camunda
chart ?= camunda/camunda-platform

# This file will be generated by make targets
chartValues ?= camunda-values-aws.yaml

.PHONY: all
all: camunda-values-aws.yaml camunda external-urls

# 0 kube from aks.mk: Create Kubernetes cluster. (No aplication gateway required)
# BEWARE!!! Need to carefully run this manually: `make ebs-csi-controller-addon`
.PHONY: kube
kube: kube-aws oidc-provider


# 1 create camunda-values-aws
camunda-values-aws.yaml:
	cp $(root)/development/camunda-values-2.yaml $(chartValues)

# 2 helm install camunda from camunda.mk

# 3 Show external URLs
.PHONY: external-urls
external-urls: external-urls-no-ingress

.PHONY: clean
clean: clean-camunda
	rm -f $(chartValues)

.PHONY: clean-kube
clean-kube: clean-kube-aws

include $(root)/aws/include/kubernetes-aws.mk
include $(root)/include/camunda.mk
include $(root)/bpmn/deploy-models.mk
include $(root)/connectors/connectors.mk
